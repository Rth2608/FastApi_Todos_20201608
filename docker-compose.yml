services:
  fastapi-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - loki
    environment:
      - LOKI_ENDPOINT=http://loki:3100/loki/api/v1/push
      - PYTHONPATH=/app
    command: uvicorn my_todo_app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - loadtest-net

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "8999:9000"  # 내부 9000 → 외부 8999
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - loadtest-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "8990:9090"  # 내부 9090 → 외부 8990
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - loadtest-net
  
  influxdb: 
    image: influxdb:1.8.3 
    ports: 
      - '8086:8086' 
    environment: 
      - INFLUXDB_DB=test
      - INFLUXDB_ADMIN_USER=admin 
      - INFLUXDB_ADMIN_PASSWORD=admin 
    volumes: 
      - influxdb:/var/lib/influxdb 

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8980:3000"  # 내부 3000 → 외부 8980
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - loadtest-net

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "8970:9100"  # 내부 9100 → 외부 8970
    networks:
      - loadtest-net
   
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - "--prometheus_endpoint=/metrics"
    restart: unless-stopped
    networks:
      - loadtest-net
  
  jmeter:
      build:
        context: ./jmeter
        dockerfile: Dockerfile
      container_name: jmeter
      volumes:
        - ./jmeter:/jmeter
      command:
        - jmeter
        - -n
        - -t
        - /jmeter/fastapi_test_plan.jmx
        - -l
        - /jmeter/results.jtl
        - -JBASE_URL=http://fastapi-app:8000
        - -Jjmeter.save.saveservice.output_format=csv
        - -e
        - -o
        - /jmeter/report
      networks:
        - loadtest-net
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"  
    networks:
      - loadtest-net

networks:
  loadtest-net:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  grafana-data:
  influxdb: